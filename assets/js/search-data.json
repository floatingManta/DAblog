{
  
    
        "post0": {
            "title": "Venv_in_offline",
            "content": "Python 가상환경 설정 . 조건: . 인터넷 연결이 없는 오프라인 | Windows 10환경 | Visual Studio Code사용 | Jupyter Notebook을 가상환경 커널에 연결 | . 목적 . AS-IS: 기존 파이썬 환경은 콘다 기반이고 3.7버전임 콘다 기반이어서 콘다 유료화 이슈 이후 직장에서 가상환경을 운영하기 불리함 | 매 업데이트마다 콘다 오프라인 설치 파일을 내부망으로 옮겨줘야 함 | . | 가상환경을 운영하는 이유 글로벌 환경과 겹치면서 환경이 깨지는 상황을 방지함 | . | TO-DO: 2022년 4월 15일 기준 파이썬 3.10.4 버전으로 콘다가 아닌 가상환경을 생성하고 패키지를 설치하여 운영함 | . 작업 . 1. 파이썬을 설치한다. 2. 가상환경을 생성한다. 3. 인터넷 연결 환경에서 패키지를 설치하고 requirements.txt를 생성하고 패키지를 다운로드한다. 4. 내부망으로 패키지를 옮겨 설치한다. . 1. 파이썬을 설치한다. . 고민사항: . 여러 버전의 Python을 설치하면 정상적으로 작동할까? | 기존 콘다 배포판을 지우지 않은 상태에서 바닐라 Python을 설치하면 정상적으로 작동할까? | . https://www.python.org 에 접속하여 Windows용 원하는 버전 설치파일을 다운로드 받는다. | 내부망과 외부망 PC에 각각 설치한다. 기존에 있던 버전이라면 설치파일 실행 시 업데이트를 선택할 수 있고, 다른 버전이라면 설치를 선택할 수 있다. 설치 시 PATH에 추가하는 옵션을 선택하고 설치 위치를 최대한 사용자 바로 아래에 간단하게 설치할 수 있도록 한다. | cmd를 열고 다음 코드로 가상환경 설치를 원하는 디렉토리에 실행파일을 복사한다. copy python310 python.exe python310 python310.exe | 2. 가상환경을 만든다. . 고민사항: . 콘다 가상환경과 파이썬 가상환경이 같이 운영될까? | VSCode에 어떻게 인식시킬까? | . VSCode를 켜고 터미널을 연다. VSCode로 가상환경을 연결하려면 반드시 VSCode에서 실행해야 한다. | 가상환경을 만들고 싶은 위치로 이동한다. cd 가상환경을 만들 위치 | 다음 코드를 실행한다. py -3 -m venv (가상환경 이름) (가상환경 이름) scripts activate . 만일 “Activate.ps1 is not digitally signed. You cannot run this script on the current system.”라고 뜨면서 실행이 안되는 경우, Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process을 실행한다. 그 후 다시 위의 activate 명령을 실행한다. . | 파이썬 설치와 가상환경 생성은 내부망과 외부망 모두에서 진행한다. . 3. 패키지를 설치한다. . 고민사항: . 어떻게 빠르게 각종 필요한 패키지를 설치할 수 있을까? | 파이썬 버전에 따라 패키지 설치 파일이 다른데 어떻게 내 외부망에서 일치시킬 수 있을까?: 이 문제는 위의 1,2 단계에서 내외부에 전부 같은 단계를 실행하여 방지한다. 이 과정을 무시하여 발생할 수 있는 문제는 다음 페이지 참고: https://cryptosalamander.tistory.com/148 판다스 에러난 경우 | . 기존 가상환경을 activate한 터미널에서 다음 명령을 실행하여 requirments.txt를 만든다. pip freeze &gt; requirements.txt | 외부망으로 requirements.txt를 옮기고 최신 Python 버전 가상환경 터미널에서 다음 명령을 실행하여 패키지를 다운로드 받는다. pip download $PATH -r . requirements.txt requirements파일의 위치를 지정해 줄 수도 있고, 파일을 가상환경이 활성화된 위치로 이동하여 바로 명령이 실행되게 할 수도 있다. 웬만하면 다운로드 위치를 지정해서 폴더 통째로 압축이 편하도록 해 준다. | 다운받은 패키지를 압축해서 내부망으로 옮긴다. | VSCode 터미널에서 다음 명령어를 실행하여 패키지를 설치한다. pip install --no-index --find-links=&quot;./&quot; -r . requirements.txt | 4. Jupyter Notebook 커널을 설정한다. . 고민사항: . 가상환경은 생겼는데 커널을 선택할 때는 왜 가상환경이 안 보일까? | . 최소 ipykernel 또는 jupyter 패키지가 설치되어야 한다. | 터미널에서 가상환경을 활성화한다. | 다음 명령을 실행하여 커널을 추가한다. ipython kernel install --user --name=.venv --display-name (선택 창에서 보일 이름) | VSCode를 끄고 다시 켠다. | 추가 고민 사항 . Microsoft C++ Build Tools 내부망에 설치(pyobdc 패키지 설치를 위해) https://velog.io/@flasharrow/pip-install-%EC%97%90%EB%9F%AC-Microsoft-Visual-C-14.0-is-required.-%ED%95%B4%EA%B2%B0 분할 압축 시도 https://kr.bandisoft.com/bandizip/help/how-to-split-a-large-file-into-smaller-files-with-bandizip/ 용량 제한으로 인해 실패 . https://levelup.gitconnected.com/install-multiple-python-versions-on-windows-10-15a8685ec99d 주피터노트북 가상환경? . Reference . https://levelup.gitconnected.com/install-multiple-python-versions-on-windows-10-15a8685ec99d 여러 버전의 파이썬을 설치하는 것, 상세한 설치방법과 설치파일 복사하는 방법, 가상환경 생성 방법 설명 https://code.visualstudio.com/docs/python/python-tutorial#_install-and-use-packages VSCode에서 터미널로 가상환경을 생성하고 설치 권한을 조정하는 방법 https://korea1782.tistory.com/5 requirements.txt를 통한 빠른 패키지 설치 https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=c_ist82&amp;logNo=220788764088 패키지 설치 안내 https://srinivas1996kumar.medium.com/adding-custom-kernels-to-a-jupyter-notebook-in-visual-studio-53e4d595208c Jupyter Notebook에 커널 연결하기 .",
            "url": "https://floatingmanta.github.io/DAblog/2022/04/16/Venv_in_offline.html",
            "relUrl": "/2022/04/16/Venv_in_offline.html",
            "date": " • Apr 16, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://floatingmanta.github.io/DAblog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://floatingmanta.github.io/DAblog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://floatingmanta.github.io/DAblog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://floatingmanta.github.io/DAblog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}